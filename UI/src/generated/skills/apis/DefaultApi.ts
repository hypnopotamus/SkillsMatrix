/* tslint:disable */
/* eslint-disable */
/**
 * Skills Matrix
 * data for Skills Matrix
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    Title,
    TitleFromJSON,
    TitleToJSON,
    TitleLink,
    TitleLinkFromJSON,
    TitleLinkToJSON,
} from '../models';

export interface TitleControllerGetTitleRequest {
    id: number;
}

/**
 * DefaultApi - interface
 * 
 * @export
 * @interface DefaultApiInterface
 */
export interface DefaultApiInterface {
    /**
     * 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApiInterface
     */
    titleControllerGetAllTitlesRaw(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<Array<TitleLink>>>;

    /**
     */
    titleControllerGetAllTitles(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<Array<TitleLink>>;

    /**
     * 
     * @param {number} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApiInterface
     */
    titleControllerGetTitleRaw(requestParameters: TitleControllerGetTitleRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<Title>>;

    /**
     */
    titleControllerGetTitle(requestParameters: TitleControllerGetTitleRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<Title>;

}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI implements DefaultApiInterface {

    /**
     */
    async titleControllerGetAllTitlesRaw(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<Array<TitleLink>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/Titles`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TitleLinkFromJSON));
    }

    /**
     */
    async titleControllerGetAllTitles(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<Array<TitleLink>> {
        const response = await this.titleControllerGetAllTitlesRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async titleControllerGetTitleRaw(requestParameters: TitleControllerGetTitleRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<Title>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling titleControllerGetTitle.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/Titles/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TitleFromJSON(jsonValue));
    }

    /**
     */
    async titleControllerGetTitle(requestParameters: TitleControllerGetTitleRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<Title> {
        const response = await this.titleControllerGetTitleRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
